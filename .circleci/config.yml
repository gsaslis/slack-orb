version: 2.1

orbs:
  slack: circleci/slack@volatile

executors:
  cli:
    docker:
      - image: circleci/circleci-cli:latest

workflows:
  validate-test-deploy:
    jobs:
      - lint

      - validate:
          requires:
            - lint

      - notifytest:
          requires:
            - validate
          context: orb-publishing

      - statustestpass:
          requires:
            - validate
          context: orb-publishing

      - publish-dev:
          requires:
            - notifytest
            - statustestpass
          context: orb-publishing

      - promote-prod:
          requires:
            - publish-dev
          filters:
            branches:
              only: master
          context: orb-publishing

jobs:
  lint:
    docker:
      - image: singapore/lint-condo
    steps:
      - checkout
      - run: yamllint .

  validate:
    executor: cli
    steps:
      - checkout
      - run: circleci orb validate src/@orb.yml

  notifytest:
    docker:
      - image: alpine
    steps:
      - run: exit 0 #toggle this to force success or status for testing
      - slack/notify:
          message: "notification test for the Slack orb, triggered by *<https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/commit/${CIRCLE_SHA1}|commit ${CIRCLE_SHA1}>* on ${CIRCLE_PROJECT_REPONAME}'s *${CIRCLE_BRANCH}* branch (<https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}|workflow here>)"
          color: "#f4aa42"
          mentions: "${ORBS_USER_GROUP_UUID}"

  statustestpass:
    docker:
      - image: alpine
    steps:
      - run: exit 0 #toggle this to force success or status for testing
      - slack/status:
          mentions: "${ORBS_USER_GROUP_UUID}"

  statustestfail:
    docker:
      - image: alpine
    steps:
      - run: exit 1 #toggle this to force success or status for testing
      - slack/status:
          mentions: "${ORBS_USER_GROUP_UUID}"

  publish-dev:
    executor: cli
    steps:
      - checkout
      - run: circleci orb publish src/@orb.yml circleci/slack@dev:$CIRCLE_BRANCH --token $CIRCLE_TOKEN

  promote-prod:
    executor: cli
    steps:
      - checkout
      - run: circleci orb publish promote circleci/slack@dev:$CIRCLE_BRANCH-$CIRCLE_SHA1 patch --token $CIRCLE_TOKEN
